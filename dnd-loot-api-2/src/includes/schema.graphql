type Party {
    id: Int!
    party_name: String!
    players: [Player]
    lootpools: [LootPool]
}

type Player{
    id: Int!
    player_name: String!
    discord_id: String!
    party: Party!
}

input PlayerInput{
    name: String!
    discord_id: String!
    party_id: String!
}

type LootPool{
    id: Int!
    lootpool_name: String!
    party: Party!
    items: [Item]
}


input LootInput{
    name: String!
    party: ID!
    items: [ItemInput]
}


type Item{
    id: Int!
    item_name: String!
    claimed_by: ID
    loot: LootPool!
}

input ItemInput{
    name: String!
    loot_id: ID!
}

type Query{
    party(id: Int!): Party
    parties: [Party]
    lootpool(id: Int!): LootPool
    lootpools: [LootPool]
    player(id: Int!): Player
    players(party_id: Int!): [Player]
    item(id: Int!): Player
    items: [Item]
}

type Mutation{
    createParty(name: String!): Party
    updateParty(id: Int! name: String!): Party
    deleteParty(id: Int!): Party

    createPlayer(name: String!, discord_id: String!, party: Int!): Player
    updatePlayer(id: Int!, party: Int!, name: String,, discord_id: String): Player
    deletePlayer(player_id: Int!, party_id: Int!): Player

    createLoot( name: String!, party_id: Int!, items: [ItemInput] ): LootPool
    updateLoot( id: Int!, items: [ItemInput]): LootPool
    deleteLoot( id: Int!): LootPool

    addItem( loot_id: Int!, name: String!): Item
    updateItem( id: Int!, name: String ): Item
    deleteItem( loot_id: Int!, item_id: Int!): Item

    claimItem( id: Int!, claimed_by: Int!): Item
    unclaimItem( id: Int!): Item
}